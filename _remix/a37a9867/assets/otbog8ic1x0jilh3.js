import{be as c,x as m,ch as g,al as h,u as l,N as v,D as y,dL as S}from"./mmal6p4kl22zfrfg.js";import{g as d}from"./meoz9lbdxu4dt41d.js";import{a7 as f,a8 as p}from"./i8crxwujeo3n60om.js";import{s as C}from"./iziiga9sc3emkx6a.js";import{a as R,i as b,T as L}from"./a44b3m5ml1mx5nn4.js";async function T(a,t){const o=p(a),s=o??await v.getConversation(a);return t==null&&o&&(t=!0),o||y.addTiming("chatgpt.web.chatPage.loadExistingConversation"),L.initThreadFromServerData(a,s,t,void 0,t),C(s.conversation_id,s.async_status?{source:S.SERVER,value:s.async_status}:null),s}const z=a=>{const t=c(),{pathname:o}=m(),s=g(),n=R(),r=h();l({queryKey:["conversation",a],queryFn:()=>T(a).catch(i=>{const e=f(o),u=e!=null?d(e):"/";throw t(u),r.danger(`Unable to load conversation ${a}`,{testId:"conversation-fetch-error-toaster"}),i}),enabled:!b(a)&&!s&&!n,refetchOnMount:!0})};export{T as f,z as u};
//# sourceMappingURL=otbog8ic1x0jilh3.js.map
