import{be as c,x as m,ci as g,al as l,u as h,N as v,D as y,dN as S}from"./owmtarjkip3g0mo9.js";import{g as d}from"./ghzy5fxshaor36y6.js";import{a7 as f,a8 as p}from"./p0qbs8ed6703vk8m.js";import{s as C}from"./dl8cedm3jpvrr6bw.js";import{a as R,i as b,T}from"./droaets0od8jpc6n.js";async function E(a,t){const o=p(a),s=o??await v.getConversation(a);return t==null&&o&&(t=!0),o||y.addTiming("chatgpt.web.chatPage.loadExistingConversation"),T.initThreadFromServerData(a,s,t,void 0,t),C(s.conversation_id,s.async_status?{source:S.SERVER,value:s.async_status}:null),s}const q=a=>{const t=c(),{pathname:o}=m(),s=g(),n=R(),r=l();h({queryKey:["conversation",a],queryFn:()=>E(a).catch(i=>{const e=f(o),u=e!=null?d(e):"/";throw t(u),r.danger(`Unable to load conversation ${a}`,{testId:"conversation-fetch-error-toaster"}),i}),enabled:!b(a)&&!s&&!n,refetchOnMount:!0})};export{E as f,q as u};
//# sourceMappingURL=jwkw1fjg6dmg1xro.js.map
