import{di as m,y as x,w as p,r as E,D as a,b4 as b,dW as f}from"./owmtarjkip3g0mo9.js";import{br as h}from"./p0qbs8ed6703vk8m.js";import"./fnymri4mf6jyaz3i.js";const u=async e=>{await b.signOut({callbackUrl:e}),f()},l=(e,o)=>{u(e).then(()=>a.addTiming(o?"chatgpt.web.logout.shouldClearIndexedDB":"chatgpt.web.logout.default")).catch(n=>{a.addError(new Error("Failed to logout",{cause:n}))})};function B({federatedLogoutUri:e}){const{value:o}=p("4017530922"),{isFannyPackInitializerEnabled:n}=h();return E.useEffect(()=>{const s=e??window.location.origin;window&&window.indexedDB&&o&&n&&typeof window.indexedDB.databases=="function"?(a.addAction("chatgpt.web.logout.clearIndexedDB"),(async()=>{const w=(await window.indexedDB.databases()).map(t=>new Promise((r,g)=>{if(t.name){const d=window.indexedDB.deleteDatabase(t.name);d.onsuccess=()=>r(),d.onerror=D=>{a.addError(new Error(`Delete IndexedDB failed for database ${t.name}, ${D}`)),g()},d.onblocked=()=>{a.addError(new Error(`Delete IndexedDB blocked for database ${t.name}`)),r()}}else a.addError(new Error(`Invalid database name ${t.name}`)),r()}));await Promise.all(w)})().then(()=>{a.addTiming("chatgpt.web.logout.clearedIndexedDB"),l(s,o)}).catch(c=>{a.addError(new Error("Failed to clear IndexedDB",{cause:c})),l(s,o)})):u(e??window.location.origin).catch(i=>a.addError(new Error("Failed to logout",{cause:i})))},[n,o,e]),null}function F(){const e=m();return x.jsx(B,{...e})}export{F as default};
//# sourceMappingURL=p8rzgbxeuti6emvr.js.map
