import{aA as F,u as U,r as d,K as q,$ as H,m as $,C as J,e6 as w}from"./mz4maixy265szwnd.js";import{c as y,d as K,e as B,R as W,g as R,a as M,V as m,b as v,I as X,f as C,h as V,r as z,L as Y,i as Z,j as h}from"./m2s7nojgl4jx37ya.js";import{cd as O,j7 as ee,au as te,j8 as x,c7 as k,T as N,aG as ne,j9 as ae}from"./n7b9v4lgoh59xuao.js";function G(){const t=F("716722001").value,e=U("2436427643").value,n=U("1413999995").value;return{av:t,video:e,screenshare:n}}function ie(){oe(),ce(),re(),se()}function se(){const{room:t,debug:e}=y(),n=G(),o=n.video||n.av,c=d.useMemo(()=>{const a=["audioinput","audiooutput"];return o&&a.push("videoinput"),a},[o]);d.useEffect(()=>{async function a(){Promise.all(c.map(async s=>{const r=await W.getLocalDevices(s),u=t?.getActiveDevice(s);if(!r.find(f=>f.deviceId===u)){const f=await R(s);let l=null;f?l=f.deviceId:r[0]&&(l=r[0].deviceId),e(`switching ${s} to ${l}`),l&&await t?.switchActiveDevice(s,l)}}))}if(navigator)return navigator.mediaDevices.addEventListener("devicechange",a),()=>{navigator.mediaDevices.removeEventListener("devicechange",a)}},[t,e,c])}function oe(){const{room:t,debug:e}=y(),n=t?.getActiveDevice("audioinput"),o=t?.getActiveDevice("audiooutput");d.useEffect(()=>{async function c(){const a=(await R("audioinput"))?.deviceId,s=(await R("audiooutput"))?.deviceId,r=async()=>{a&&n!==a&&(e("switching audio input to default"),await t?.switchActiveDevice("audioinput",a))},u=async()=>{if(s&&o!==s){e("switching audio output to default");try{await t?.switchActiveDevice("audiooutput",s)}catch(I){e("failed to switch audio output",I)}}};await Promise.all([r(),u()])}c()},[n,o,e,t])}function ce(){const{isVideoEnabled:t,endStartingVideo:e}=K(),{room:n,debug:o}=y(),c=G(),a=c.video||c.av,s=a?n?.getActiveDevice("videoinput"):void 0;d.useEffect(()=>{async function r(){if(t)try{await n?.localParticipant.setCameraEnabled(!0),e(!0)}catch{e(!1)}else await n?.localParticipant.setCameraEnabled(!1)}n&&r()},[t,e,n]),d.useEffect(()=>{async function r(){const u=(await R("videoinput"))?.deviceId;await(async()=>{u&&s!==u&&(o("switching video input to default"),await n?.switchActiveDevice("videoinput",u))})()}a&&r()},[s,o,n,a])}function re(){const{room:t}=y(),{isScreenshareEnabled:e,endStartingScreenshare:n}=B();d.useEffect(()=>{async function o(){if(e)try{await t?.localParticipant.setScreenShareEnabled(!0,{video:{displaySurface:"monitor"}}),n(!0)}catch{n(!1)}else await t?.localParticipant.setScreenShareEnabled(!1)}t&&o()},[t,e,n])}function Q(){const{debug:t}=y(),e=M(o=>o.conversationId),n=q();return d.useCallback(async o=>{const c=o,a=e&&!O(e)?e:void 0,s=c??a;if(s){t(`refetch conversationId ${s}`);try{await ee(s,!0)}catch(r){const u="Failed to update conversation";t(u,r),n.danger(u)}}},[e,t,n])}const de=5e3,ue=2e3,ve=t=>{const{room:e}=y(),n=M(p=>p.disconnectPending),o=M(p=>p.server.remoteState===m.Speaking),c=M(p=>p.conversationId)??void 0,a=te(c),s=d.useRef(!1),r=Q(),u=H(),I=$();s.current=o||s.current;const f=d.useCallback(async p=>{clearTimeout(n),v.setState(E=>{E.disconnectPending=void 0}),e?.disconnect(),await r(a),v.setState(X);const b=a??p;b&&x(u,I,b),t?.refetchLater&&window.setTimeout(()=>{r(a)},ue)},[n,e,r,a,t?.refetchLater,u,I]),l=s.current&&!a,L=d.useCallback(()=>{v.setState(p=>{p.disconnectPending=window.setTimeout(f,de)})},[f]);return{disconnectPending:n!==void 0,shouldDelayDisconnect:l,delayDisconnect:L,immediateDisconnect:f}};function le(){const t=$(),{room:e,debug:n,decoder:o}=y(),{disconnectPending:c,immediateDisconnect:a}=ve(),s=Q(),r=H(),u=d.useRef(!1),I=d.useRef(!1),f=k(l=>l.lastVoiceSessionStartTime);d.useEffect(()=>{const l=async g=>{const{new_state:i}=g;if(v.setState(S=>{S.server.remoteState=i}),i===m.Listening&&!I.current&&f instanceof Date){const T=new Date().getTime()-f.getTime();w.firstListeningLatency.success({durationMs:T}),I.current=!0}i===m.ListeningIntently?w.voiceSessionListeningIntently.stateChange():i===m.Listening?w.voiceSessionListening.stateChange():i===m.Thinking?w.voiceSessionThinking.stateChange():i===m.Speaking?w.voiceSessionSpeaking.stateChange():i===m.Halted&&w.voiceSessionHalted.stateChange()},L=async g=>{v.setState(i=>{i.server.usage=g})},p=async g=>{v.setState(i=>{i.server.toolUpdate={...g}})},b=async g=>{let i;try{i=JSON.parse(o.decode(g)),n("data recevied",i)}catch(S){n("error parsing data",S);return}switch(v.setState(S=>(S.server.messages.push({...i,timestamp:new Date,source:"remote"}),S)),i.type){case V.StateUpdate:n("state update",i.payload);const{new_state:S,delay_s:T}=i.payload;if(S===m.Listening&&!u.current){u.current=!0,performance.mark("voice_mode.end");const D=performance.measure("voice_mode","voice_mode.start","voice_mode.end").duration.toFixed(0);w.voiceMode.connect({durationMs:D})}S===m.Thinking&&T&&(n(`${e?.name} delay thinking state by ${T} seconds`),l({new_state:m.ListeningIntently,delay_s:T}),await new Promise(D=>setTimeout(D,T*1e3))),l(i.payload);break;case V.ConversationUpdate:{n("conversation update",i.payload);const D=v.getState().conversationId,{conversation_id:A}=i.payload;D&&O(D)&&(N.initThread(D,{kind:J.PrimaryAssistant}),N.setServerIdForNewThread(D,A),v.setState(j=>{j.conversationId=A}),x(ne,t,A),ae(t)),await s(A),c&&a(A);break}case V.UsageUpdate:L(i.payload);break;case V.ToolUpdate:p(i.payload);break}},E=(g,i)=>{n("track published",g,i)},P=()=>{n("disconnected"),z(),w.voiceSessionDisconnected.stateChange()},_=(g,i)=>{i instanceof Y&&(n(`Connection quality changed for participant ${i.identity}: ${g}`),v.setState(S=>{S.server.voiceConnectionQuality=g}))};return e?.on(C.DataReceived,b),e?.on(C.TrackPublished,E),e?.on(C.ConnectionQualityChanged,_),e?.on(C.Disconnected,P),()=>{e?.off(C.DataReceived,b),e?.off(C.TrackPublished,E),e?.off(C.ConnectionQualityChanged,_),e?.off(C.Disconnected,P)}},[t,e,s,n,o,r,c,a,f])}function fe(){ge(),Se(),pe(),he()}function ge(){const{room:t}=y();d.useEffect(()=>{v.setState(e=>{e.dev.room=t})},[t])}function Se(){const{room:t}=y(),e=Z(t);d.useEffect(()=>{v.setState(n=>{n.server.connectionState=e})},[e])}function pe(){const{room:t,debug:e,encoder:n}=y();d.useEffect(()=>{const o=!!v.getState().server.actions;if(t&&!o){const c=async a=>{e("publishing action",a);const s={type:V.ActionRequest,payload:{action:a}};await t.localParticipant.publishData(n.encode(JSON.stringify(s)),{reliable:!0}),v.setState(r=>{r.server.messages.push({...s,timestamp:new Date,source:"local"})})};v.setState(a=>{a.server.actions={[h.StartListeningIntently]:()=>c(h.StartListeningIntently),[h.StopListeningIntently]:()=>c(h.StopListeningIntently),[h.HaltAllActivity]:()=>c(h.HaltAllActivity),[h.ResumeListening]:()=>c(h.ResumeListening),[h.RelayMessage]:()=>c(h.RelayMessage)}})}},[t,e,n])}function he(){const t=v(e=>e.isVoiceModeActive);d.useEffect(()=>(k.setState({isVoiceActive:t}),()=>{k.setState({isVoiceActive:!1})}),[t])}const De=d.memo(function(){return le(),fe(),ie(),null});export{De as V,G as a,ve as u};
//# sourceMappingURL=hykt0gmjk7wloo5m.js.map
