import{H as c,j as f,ec as a,N as S}from"./otyn7m3v4o5hjv1m.js";import{j as g,i as b,G as h}from"./guixxmttrchqsmhb.js";import"./elwr36cpw46qn2l2.js";import"./g98o1hu13svzcy4j.js";import"./lw3rrnnb5dxcyypl.js";import"./kgyg817qi2bj4184.js";import"./g08cpw9vtft4y6ku.js";import"./n8ljlp21wilt13tf.js";import"./xe4hexxxyjcii8ft.js";import"./i7fmbdae81b985x0.js";import"./hkmla6lmyftf0v53.js";import"./aszamxbvr2a9gk12.js";import"./hlmesjknt93bcxhd.js";import"./kf0px5xsq2h01gfe.js";import"./kvxptdshjr5uucy7.js";import"./mdbvzkzbjz7wvyrk.js";import"./busl3phtm15t1ux6.js";const M=.75;function N({messages:s}){const l=c(),[i,e]=s,t=T(i,e);let n=g.Running,o=d.creatingPlan,r;switch(t.status){case"running":t.numTotalSubAgents>0&&t.numCompletedSubAgents/t.numTotalSubAgents>=M?o=d.almostDone:(o=d.running,r={numTasks:t.numTotalSubAgents});break;case"done":n=g.Finished,o=void 0;break;case"stopped":n=g.Stopped,o=d.cancelled;break}const u=o?l.formatMessage(o,r):null;return f.jsx(b,{highlightedCommand:u,status:n,showWorkUserSetting:!1})}function T(s,l){var r,u,p,m;const i=((u=(r=l==null?void 0:l.message.metadata)==null?void 0:r.parallel_browse)==null?void 0:u.frontend_info.sub_agent_infos)??((m=(p=s.message.metadata)==null?void 0:p.parallel_browse)==null?void 0:m.frontend_info.sub_agent_infos);let e,t=0,n=0;i!=null&&(e=_(i),t=e.length,n=e.filter(k).length);let o="planning";return h(s.message)?o="stopped":l!=null&&(o=n===t?"done":"running"),{status:o,subAgentInfos:e,numTotalSubAgents:t,numCompletedSubAgents:n}}function _(s){const l=Object.values(s).reduce((e,t)=>{const n=t.task_index;return e[n]==null&&(e[n]=[]),e[n].push(t),e},{});return Object.values(l).map(e=>({...e[0],status:A(e)})).sort((e,t)=>e.task_index-t.task_index)}function A(s){const l=s.map(e=>e.status),i=[a.Starting,a.Running,a.Done,a.Error,a.Timeout,a.Cancelled];for(const e of i)if(l.some(t=>t===e))return e;return a.Starting}function k(s){return s.status===a.Done||s.status===a.Timeout||s.status===a.Error||s.status===a.Cancelled}const d=S({creatingPlan:{id:"parallelBrowsingMessage.creatingPlanV2",defaultMessage:"Making a research plan"},running:{id:"parallelBrowsingMessage.running_2",defaultMessage:"Visiting {numTasks, plural, one {# site} other {# sites}}"},almostDone:{id:"parallelBrowsingMessage.almostDone",defaultMessage:"Almost done"},cancelled:{id:"parallelBrowsingMessage.cancelledV2",defaultMessage:"Stopped doing research"},done:{id:"parallelBrowsingMessage.done",defaultMessage:"Finished research"}});export{N as default};
//# sourceMappingURL=f2i11gyikrzfoo1w.js.map
