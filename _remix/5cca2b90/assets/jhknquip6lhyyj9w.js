import{dk as S,a1 as A,bt as T,B as p,ao as _,cP as D}from"./d5wu36845ofngo69.js";import{w}from"./cdvaa0vibgsxrdy8.js";import{H as B}from"./dyuy7l4f2wj2f3nf.js";const d=()=>{let r,s;const a=new Promise((n,e)=>{r=n,s=e});return{resolve:r,reject:s,value:a}},M=(r,s)=>{var o;const a=r.name??`batcher:${Math.random().toString(16).slice(2)})`,n=r.scheduler??y(10),e=(o=globalThis.__BATSHIT_DEVTOOLS__)==null?void 0:o.for(a);let t={seq:0,batch:new Set,currentRequest:d(),timer:void 0,start:null,latest:null};e==null||e.create({seq:t.seq});const i=()=>{t.batch=new Set,t.currentRequest=d(),t.timer=void 0,t.start=null,t.latest=null};return{fetch:c=>{t.start||(t.start=Date.now()),t.latest=Date.now(),t.batch.add(c),clearTimeout(t.timer);const h=n(t.start,t.latest,t.batch.size);e==null||e.queue({seq:t.seq,query:c,batch:[...t.batch],scheduled:h,latest:t.latest,start:t.start});const q=()=>{const u=t.seq,b=r.fetcher([...t.batch]),f=t.currentRequest;return e==null||e.fetch({seq:u,batch:[...t.batch]}),i(),b.then(l=>{e==null||e.data({seq:u,data:l}),f.resolve(l)}).catch(l=>{e==null||e.error({seq:u,error:l}),f.reject(l)}),t.seq++,b};if(h==="immediate"){const u=t.currentRequest;return q(),u.value.then(b=>r.resolver(b,c))}else return h==="never"?t.currentRequest.value.then(u=>r.resolver(u,c)):(t.timer=setTimeout(q,h),t.currentRequest.value.then(u=>r.resolver(u,c)))}}},P=r=>(s,a)=>s.find(n=>n[r]==a),y=r=>(s,a)=>{const n=a-s;return r-n},R=S(r=>M({fetcher:async s=>{const a=new Map;for await(const n of A.streamedJsonPost(`${T}/attributions`,{urls:s}))n.attribution&&a.set(n.url,n.attribution),r.setQueryData(["attribution",{url:n.url}],n.attribution);return B(s.map(n=>{const e=a.get(n);return e&&{url:n,attribution:e}}))},resolver:P("url"),scheduler:y(100)}));function C(r,{useBaseUrl:s=!0,enabled:a=!0}={}){const n=s?w(r):r,e=p(),t=R(e);return _({queryKey:["attribution",{url:n}],queryFn:async()=>(await t.fetch(n)).attribution,enabled:a&&!!r})}function H(r,{useBaseUrl:s=!0,enabled:a=!0}={}){const n=s?r.map(w):r,e=p(),t=R(e);return D({queries:n.map(i=>({queryKey:["attribution",{url:i}],queryFn:async()=>(await t.fetch(i)).attribution,enabled:n.length>0&&a})),combine:i=>{const m=new Map;for(let o=0;o<i.length;o++){const c=i[o].data;c&&m.set(r[o],c)}return m}})}export{H as a,M as c,P as k,C as u,y as w};
//# sourceMappingURL=jhknquip6lhyyj9w.js.map
