import{Z as i,e$ as p,r as c,j as e,aC as r,aG as l}from"./orw3ylzo1pm5yat5.js";import{A as m}from"./kr78y8aiqijkbh60.js";import{aU as u}from"./fx9bt06582fbthzh.js";import"./m3m64sdoonnn98n9.js";import"./dxebepq3id20w15z.js";import"./b8evqmmgchtwinxo.js";import"./cjrhjg5chf76fjjx.js";import"./d6a0bnfjzkpzl5w1.js";import"./ky7siiuco8pnrpwv.js";import"./0ti1rubp7qr756yo.js";import"./di1lxahr5ylfawf3.js";function M({gizmo:t}){const s=i(),a=p(),[n,o]=c.useState(!1);return s==null||!a?null:e.jsxs("div",{className:"h-52px flex w-full items-center justify-center gap-2 bg-gray-100 p-3 text-sm dark:bg-gray-700",children:[e.jsx(u,{className:"icon-sm"}),e.jsx(r,{id:"GizmoConversationHeader.usingAsOwner",defaultMessage:"Only workspace owners can use this GPT."}),e.jsx(l,{color:"secondary",size:"small",onClick:()=>o(!0),children:e.jsx(r,{id:"GizmoConversationHeader.approveGPTButton",defaultMessage:"Approve for workspace"})}),e.jsx(m,{isOpen:n,onClose:()=>o(!1),account:s,gpt:t})]})}export{M as GizmoUsingAsOwnerNotice};
//# sourceMappingURL=mgdl9znuue8bld5s.js.map
